@* @model MoviePickerDomain.Model.Director *@

@model DirectorViewModel

@{
    ViewData["Title"] = "Details";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1 class="mr-auto">@Localizer["details"]</h1>
    <div class="ml-auto">
        <a asp-action="Edit" asp-route-id="@Model?.Director.Id" class="btn btn-primary rounded-pill">@Localizer["edit"]</a>
        <a asp-action="Index" class="btn btn-primary rounded-pill">@Localizer["backToList"]</a>
    </div>
</div>


<div>
    <h4>@Localizer["director"]</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @* @Html.DisplayNameFor(model => model.Name) *@
            @Localizer["nameOfPerson"]
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Director.Name)
        </dd>
        <dt class = "col-sm-2">
            @* @Html.DisplayNameFor(model => model.BirthDate) *@
            @Localizer["birthDate"]
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Director.BirthDate)
        </dd>
        <dt class = "col-sm-2">
            @* @Html.DisplayNameFor(model => model.BirthCountry) *@
            @Localizer["birthCountry"]
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Director.BirthCountry.Name)
        </dd>
    </dl>
</div>


<table class="table">
    <tr>
        <th>@Localizer["moviesDirected"]</th>
    </tr>
    <tr>
        <td>
            <ul>
                @foreach (var movie in Model.MoviesDirected)
                {
                    <li>
                        <a asp-action="MovieInfo" asp-route-movieId="@movie.Id">  @movie.Title </a>
                    </li>
                }
            </ul>
        </td>
    </tr>
</table>