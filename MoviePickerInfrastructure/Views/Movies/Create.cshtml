@* @model ﻿MoviePickerDomain.Model.Movie *@
@model MovieViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>@Localizer["creation"]</h1>

<h4>@Localizer["movie"]</h4>
<hr />

<div class="row">

 
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tag Input Example</title>
  <link rel="stylesheet" href="~/css/site.css">
</head>
<body>
  <div class="tag-input">
    <div class="picker-wrapper">
                
        <select id="genrePicker">
                    @foreach (var genre in Model.GetAllAvailableGenres())
                    {
                        <option value="@genre.Name">@genre.Name</option>
                    }

      </select>

      <button id="addGenreBtn">Add Genre</button>
    </div>
    <script>
                // document.getElementById('addGenreBtn').addEventListener('click', function () {
                //     var selectedGenre = document.getElementById('genrePicker').value;
                //     if (selectedGenre !== '') {
                //     //razor syntax {
                //         Model.AddGenreByName(selectedGenre);

                //         }
                //     }
                // });

//                 document.getElementById('addGenreBtn').addEventListener('click', function () {
//     var selectedGenre = document.getElementById('genrePicker').value;
//     if (selectedGenre !== '') {
//         // Make an AJAX request to the server
//         var xhr = new XMLHttpRequest();
//         xhr.open('POST', '/Controllers/MoviesController/AddGenreByName', true);
//         xhr.setRequestHeader('Content-Type', 'application/json');
//         xhr.onreadystatechange = function () {
//             if (xhr.readyState === XMLHttpRequest.DONE) {
//                 // Handle the response from the server if needed
//             }
//         };

//         // Convert the selectedGenre to JSON and send it in the request body
//         var data = JSON.stringify({ genre: selectedGenre });
//         xhr.send(data);
//     }
// });
    </script>


    <div id="selectedGenres" class="selected-genres">
                @foreach (var genre in Model.SelectedGenres)
                {
                    <span>@genre.Name</span>
                    //Model.SelectedGenres.Add(@genre);
                }
            </div>
            <input type="hidden" id="selectedGenresInput" name="SelectedGenres" value="" />
  </div>


 </body> 

    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Movie.Title" class="control-label"> @Localizer["title"] </label>
                <input asp-for="Movie.Title" class="form-control" />
                <span asp-validation-for="Movie.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Movie.ReleaseDate" class="control-label"> @Localizer["releaseDate"] </label>
                <input asp-for="Movie.ReleaseDate" class="form-control" type="date" />
                <span asp-validation-for="Movie.ReleaseDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Movie.DirectorId" class="control-label"> @Localizer["director"] </label>
                <select asp-for="Movie.DirectorId" class="form-control" asp-items="ViewBag.DirectorId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Movie.Budget" class="control-label"> @Localizer["budget"] </label>
                <input asp-for="Movie.Budget" class="form-control" />
                <span asp-validation-for="Movie.Budget" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Movie.BoxOfficeRevenue" class="control-label"> @Localizer["boxOfficeRevenue"] </label>
                <input asp-for="Movie.BoxOfficeRevenue" class="form-control" />
                <span asp-validation-for="Movie.BoxOfficeRevenue" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Movie.Duration" class="control-label"> @Localizer["duration"] </label>
                <input asp-for="Movie.Duration" class="form-control" />
                <span asp-validation-for="Movie.Duration" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Movie.Rating" class="control-label"> @Localizer["rating"] </label>
                <input asp-for="Movie.Rating" class="form-control" />
                <span asp-validation-for="Movie.Rating" class="text-danger"></span>
            </div>           

            <div class="form-group">
                <input type="submit" value="@Localizer["create"]" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">@Localizer["backToList"]</a>
</div>
 

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


