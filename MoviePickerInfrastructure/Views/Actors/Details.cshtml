@* @model MoviePickerDomain.Model.Actor *@

@model ActorViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>@Localizer["details"]</h1>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Actor.Id">@Localizer["edit"]</a> |
    <a asp-action="Index">@Localizer["backToList"]</a>
</div>


<div>
    <h4>@Localizer["actor"]</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @* @Html.DisplayNameFor(model => model.Name) *@
            @Localizer["name"]
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Actor.Name)
        </dd>
        <dt class = "col-sm-2">
            @* @Html.DisplayNameFor(model => model.BirthDate) *@
            @Localizer["birthDate"]
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Actor.BirthDate)
        </dd>
        <dt class = "col-sm-2">
           @*  @Html.DisplayNameFor(model => model.BirthCountry) *@
            @Localizer["birthCountry"]
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Actor.BirthCountry.Name)
        </dd>
    </dl>
</div>




<table class="table">
    <tr>
        <th>@Localizer["moviesActed"]</th>
    </tr>
    <tr>
        <td>
            <ul>
                @foreach (var movie in Model.MoviesWithThisActor)
                {
                    <li>
                        <a asp-action="MovieInfo" asp-route-movieId="@movie.Id">  @movie.Title </a>
                    </li>
                }
            </ul>
        </td>
    </tr>
</table>