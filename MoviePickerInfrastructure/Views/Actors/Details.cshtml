@* @model MoviePickerDomain.Model.Actor *@

@model ActorViewModel

@{
    ViewData["Title"] = "Details";
}

@* <div class="background-image-blurred"></div> *@


<div class="d-flex justify-content-between align-items-center mb-3">
    <h1 class="mr-auto">@Localizer["details"]</h1>
    <div class="ml-auto">
        <a asp-action="Edit" asp-route-id="@Model?.Actor.Id" class="btn btn-primary rounded-pill">@Localizer["edit"]</a>
        <a asp-action="Index" class="btn btn-primary rounded-pill">@Localizer["backToList"]</a>
    </div>
</div>


<h4>@Localizer["actor"]</h4>
<hr />

<div class="row">
    <div class="col-md-6">
        <div class="d-flex align-items-center">
            @if (Model.Actor.ActorImage != null && Model.Actor.ActorImage.Length > 0)
            {
                <img src="data:image;base64,@Convert.ToBase64String(Model.Actor.ActorImage)" alt="Actor Image" class="small-image mr-3">
            }
            <div>
                <dl class="row m-0">
                    <dt class="col-sm-4">@Localizer["name"]</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Actor.Name)</dd>
                    <dt class="col-sm-4">@Localizer["birthDate"]</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Actor.BirthDate)</dd>
                    <dt class="col-sm-4">@Localizer["birthCountry"]</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Actor.BirthCountry.Name)</dd>
                </dl>
            </div>
        </div>
    </div>
</div>




<table class="table">
    <tr>
        <th>@Localizer["moviesActed"]</th>
    </tr>
    <tr>
        <td>
            <ul>
                @foreach (var movie in Model.MoviesWithThisActor)
                {
                    <li>
                        <a asp-action="MovieInfo" asp-route-movieId="@movie.Id">  @movie.Title </a>
                    </li>
                }
            </ul>
        </td>
    </tr>
</table>